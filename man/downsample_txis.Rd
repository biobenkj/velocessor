% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downsample_txis.R
\name{downsample_txis}
\alias{downsample_txis}
\title{blockwise downsampling: try to preserve balanced clusters across samples}
\usage{
downsample_txis(txis, maxcells = 50, mincells = 10, ...)
}
\arguments{
\item{txis}{SingleCellExperiment where !is.null(colLabels(txis))}

\item{maxcells}{max cells per cluster per sample (see Details) (50)}

\item{mincells}{min cells per cluster per sample (see Details) (10)}

\item{...}{additional arguments to accomodate bootstrapping (not yet)}
}
\value{
\preformatted{     colnames(txis) satisfying the sampling scheme (see Details)
}
}
\description{
Originally this was a helper function for label_cells but it is useful
in its own right, so it is exposed as an exported function now. Note that
\code{maxcells} is a MAXIMUM, i.e. if there are 30 cells in a cluster for a sample
and maxcells == 50, then (obviously?) only 30 cells will be returned for that
particular combination of cluster and sample.
}
\details{
Especially when using the default Louvain clustering approach, there will
be samples without any cells in a cluster, and vice versa. To avoid having
a bunch of artifacts, when sample==TRUE, we fit a mixture model to the number
of cells in each cluster, and exclude samples with few or no cells in that
cluster from block sampling. Don't use this on SmartSeq-type data.

Note that attr(downsample_txis(txis), "scheme") is a list with elements
'mincells', 'maxcells', and 'eligible'. 'mincells' and 'maxcells' are
integers, while 'eligible' is an integer matrix with counts of cells
post-filtering (i.e., subject to \code{mincells} and per-cluster mixture fits).

The mixture fits assume that a two-component mixture model on either
log(1+cells) or directly on cell number per cluster will remove "noise"
elements. This may be false; the user will have to investigate if so.
}
